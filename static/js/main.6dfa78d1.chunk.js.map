{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","actions.js","constants.js","reducers.js","index.js"],"names":["Card","name","email","id","className","src","alt","CardList","robots","map","user","i","key","SearchBox","value","onChange","type","placeholder","Scroll","props","style","overflow","border","height","children","Title","styled","h1","connect","state","searchFiled","searchRobots","requestRobots","isPending","error","dispatch","event","payload","target","onRequestRobots","fetch","then","res","json","data","catch","err","filteredRobots","filter","robot","toLowerCase","includes","useEffect","initialStateSearch","initialStateRobots","logger","createLogger","rootReducer","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6dfa78d1.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ name, email, id }) => {\n  return (\n    <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n      <img src={`https://robohash.org/${id}?200x200`} alt=\"robots\" />\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n};\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n  return (\n    <div>\n      {robots.map((user, i) => {\n        return (\n          <Card\n            key={i}\n            id={robots[i].id}\n            name={robots[i].name}\n            email={robots[i].email}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default CardList;\n","import React from 'react';\n\nconst SearchBox = ({ value, onChange }) => {\n  return (\n    <div className=\"pa2\">\n      <input\n        className=\"pa3 ba b--green bg-lightest-blue\"\n        type=\"search\"\n        placeholder=\"serach robots\"\n        onChange={onChange}\n        value={value}\n      />\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import React from 'react';\n\nconst Scroll = (props) => {\n  return (\n    <div\n      style={{ overflow: 'scroll', border: '5px solid black', height: '800px' }}\n    >\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport styled from 'styled-components';\nimport Scroll from '../components/Scroll';\n\nimport { setSearchField, requestRobots } from '../actions';\n\nconst mapStateToProps = (state) => {\n  return {\n    searchFiled: state.searchRobots.searchFiled,\n    robots: state.requestRobots.robots,\n    isPending: state.requestRobots.isPending,\n    error: state.requestRobots.error,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onChange: (event) => dispatch(setSearchField(event.target.value)),\n    onRequestRobots: () => dispatch(requestRobots()),\n  };\n};\n\nconst Title = styled.h1`\n  font-size: 4em;\n  font-weight: 600;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  color: white;\n  text-shadow: 5px 5px 8px #000000;\n  margin: 0.3 0;\n`;\n\nconst App = (props) => {\n  const { onRequestRobots, robots, searchFiled, isPending } = props;\n  const filteredRobots = robots.filter((robot) => {\n    return robot.name.toLowerCase().includes(searchFiled.toLowerCase());\n  });\n\n  useEffect(() => {\n    onRequestRobots();\n  }, [onRequestRobots]);\n\n  return isPending ? (\n    <Title>Loading...</Title>\n  ) : (\n    <div className=\"tc\">\n      <Title>RoboFriends</Title>\n      <SearchBox {...props} />\n      <Scroll>\n        <CardList robots={filteredRobots} />\n      </Scroll>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n// export default App;\n","import {\n  CHANGE_SERACH_FIELD,\n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_FAILED,\n} from './constants.js';\n\nexport const setSearchField = (text) => ({\n  type: CHANGE_SERACH_FIELD,\n  payload: text,\n});\n\nexport const requestRobots = () => (dispatch) => {\n  dispatch({ type: REQUEST_ROBOTS_PENDING });\n  fetch(`https://jsonplaceholder.typicode.com/users`)\n    .then((res) => res.json())\n    .then((data) => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data }))\n    .catch((err) => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: err }));\n};\n","export const CHANGE_SERACH_FIELD = 'CHANGE_SERACH_FIELD';\n\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';\n","import {\n  CHANGE_SERACH_FIELD,\n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_FAILED,\n} from './constants.js';\n\nconst initialStateSearch = {\n  searchFiled: '',\n};\n\nexport const searchRobots = (state = initialStateSearch, action = {}) => {\n  switch (action.type) {\n    case CHANGE_SERACH_FIELD:\n      return Object.assign({}, state, { searchFiled: action.payload });\n    default:\n      return state;\n  }\n};\n\nconst initialStateRobots = {\n  isPending: false,\n  robots: [],\n  error: '',\n};\n\nexport const requestRobots = (state = initialStateRobots, action = {}) => {\n  switch (action.type) {\n    case REQUEST_ROBOTS_PENDING:\n      return Object.assign({}, state, { isPending: true });\n    case REQUEST_ROBOTS_SUCCESS:\n      return Object.assign({}, state, {\n        robots: action.payload,\n        isPending: false,\n      });\n    case REQUEST_ROBOTS_FAILED:\n      return Object.assign({}, state, {\n        error: action.payload,\n        isPending: false,\n      });\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport './index.css';\nimport App from './containers/App';\nimport { searchRobots, requestRobots } from './reducers';\nimport 'tachyons';\n\nconst logger = createLogger();\nconst rootReducer = combineReducers({ searchRobots, requestRobots });\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunkMiddleware, logger)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}